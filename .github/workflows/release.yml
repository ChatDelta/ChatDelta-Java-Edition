name: build-and-release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Build with Maven
        run: mvn -B package
      - name: Package application
        run: |
          mkdir -p dist/ChatDelta
          cp target/chatdelta-java-*.jar dist/ChatDelta/ChatDelta.jar
          cp README.md dist/ChatDelta/
          cp LICENSE dist/ChatDelta/
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            echo "@echo off" > dist/ChatDelta/ChatDelta.bat
            echo "java -jar \"%~dp0ChatDelta.jar\" %*" >> dist/ChatDelta/ChatDelta.bat
          else
            echo "#!/bin/bash" > dist/ChatDelta/ChatDelta.sh
            echo "java -jar \"\$(dirname \"\$0\")/ChatDelta.jar\" \"\$@\"" >> dist/ChatDelta/ChatDelta.sh
            chmod +x dist/ChatDelta/ChatDelta.sh
          fi
        shell: bash
      - name: Archive package
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cd dist && zip -r ../ChatDelta-${{ matrix.os }}.zip ChatDelta
          else
            tar -czf ChatDelta-${{ matrix.os }}.tar.gz -C dist ChatDelta
          fi
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ChatDelta-${{ matrix.os }}
          path: ChatDelta-${{ matrix.os }}.*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/*.tar.gz
            artifacts/**/*.zip
